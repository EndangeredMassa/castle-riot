module.exports = class Flashlight
  constructor: ({x, y, offset, @map}) ->
    [@xOffset, @yOffset] = offset
    @width = 128
    @height = 96
    canvas = $("<canvas width='#{@width}' height='#{@height}'></canvas>")[0]
    c = canvas.getContext '2d'
    c.beginPath()
    @drawFlashlightPath(c)
    c.fill()
    @sprite = new Sprite image: canvas, anchor: "left_center"
    @move x, y

  drawFlashlightPath: (context) ->
    context.moveTo 0, 48
    context.lineTo 128, 0
    context.lineTo 128, 96
    context.lineTo 0, 48
    context.fillStyle = "rgba(255,255,0,0.3)"

  move: (x,y) ->
    @sprite.x = x + @xOffset
    @sprite.y = y + @yOffset
    @detectHiddenSprites()

  faceLeft: ->
    @sprite.rotateTo 180
    @facing = "left"

  faceRight: ->
    @sprite.rotateTo 0
    @facing = "right"

  faceDown: ->
    @sprite.rotateTo 90
    @facing = "down"

  faceUp: ->
    @sprite.rotateTo -90
    @facing = "up"

  # Apparently the sprite's rect() function doesn't change its value when
  # you rotate the sprite, so this function does.
  rect: ->
    # defaults for @facing = 'right'
    rectX = @sprite.x
    rectY = @sprite.y - @height / 2
    rectW = @width
    rectH = @height

    switch @facing
      when "left"
        rectX -= @width
      when "up"
        rectX -= @height / 2
        rectY = @sprite.y - @width
        rectW = @height
        rectH = @width
      when "down"
        rectX -= @height / 2
        rectY = @sprite.y
        rectW = @height
        rectH = @width

    x: rectX
    width: rectW
    right: rectX + rectW
    y: rectY
    height: rectH
    bottom: rectY + rectH


  detectHiddenSprites: ->
    sprites = @map.atRect @rect()
    for sprite in sprites
      if sprite.onDiscovered && !sprite.discovered
        sprite.discovered = true
        sprite.onDiscovered()
